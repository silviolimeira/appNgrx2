
$ npm uninstall -g cordova ionic
$ npm install -g codova ionic

$ ionic start myAPp blank

$ ionic cordova plugin add cordova-plugin-app-update
$ npm install @ionic-native/app-update

npm i @ngrx/store --save
npm i @ngrx/effects --save
npm i @ngrx/entity --save
npm i @ngrx/router-store --save
npm i @ngrx/store-devtools --save
npm i @ngrx/schematics --save

Items Feature

Define state
src/app/reducers/items.ts. It extends from EntityState in @ngrx/entity.

Create Actions
$ mkdir -p src/app/actions
$ touch src/app/actions/items.ts

Create reducers
    After defining the state and actions, we can
create reducers. For each action defined, the reducer function
needs to have login to handle it.

Add effects
    The actual login of loading items is implemented in the effect.
$ mkdir -p src/app/effects/
$ touch src/app/effects/items.ts

$ npm install angularfire2 firebase --save
ref: https://medium.com/letsboot/lets-learn-how-to-install-and-setup-angularfire2-4-0-135d72bb0a41

With the effect loadItems$, the action Load triggers actions LoadSucess or LoadFial
NOte: It's convention for variables of Observables to use $ as the name suffix
